
import { supabase } from '@/lib/supabase';

export const verifyStorageBucket = async (): Promise<boolean> => {
  try {
    console.log('üîç Verificando disponibilidade do storage...');
    
    // Verificar se o usu√°rio est√° autenticado
    const { data: { user }, error: authError } = await supabase.auth.getUser();
    
    if (authError || !user) {
      console.warn('‚ö†Ô∏è Usu√°rio n√£o autenticado para verifica√ß√£o do storage');
      return false;
    }

    // CORRE√á√ÉO: Verifica√ß√£o mais simples - apenas verificar se conseguimos acessar o storage
    // Removendo tentativa de listar arquivos que pode falhar devido a RLS
    const { data: buckets, error: bucketsError } = await supabase.storage.listBuckets();
    
    if (bucketsError) {
      console.warn('‚ö†Ô∏è Erro ao listar buckets:', bucketsError.message);
      return false;
    }

    const profileBucket = buckets?.find(bucket => bucket.name === 'profile-photos');
    
    if (!profileBucket) {
      console.warn('‚ö†Ô∏è Bucket profile-photos n√£o encontrado');
      return false;
    }

    console.log('‚úÖ Storage verificado e dispon√≠vel');
    return true;
  } catch (error) {
    console.warn('‚ö†Ô∏è Erro na verifica√ß√£o do storage:', error);
    return false;
  }
};

// CORRE√á√ÉO: Fun√ß√£o simplificada que n√£o executa verifica√ß√£o desnecess√°ria
export const initializeStorage = async (): Promise<void> => {
  console.log('üîß Storage inicializado (verifica√ß√£o sob demanda)');
};
